arch=arm
autoload=no
baudrate=115200
board=stm32mp1
board_name=stm32mp135d-atk
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_device=mmc
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};else bootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_efi_bootmgr=if fdt addr ${fdt_addr_r}; then bootefi bootmgr ${fdt_addr_r};else bootefi bootmgr;fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}${boot_syslinux_conf}
boot_instance=1
boot_net_usb_start=true
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_syslinux_conf=extlinux/extlinux.conf
boot_targets=mmc1 ubifs0 mmc0 usb0 pxe 
bootcmd=run bootcmd_stm32mp
bootcmd_mmc0=devnum=0; run mmc_boot
bootcmd_mmc1=devnum=1; run mmc_boot
bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi
bootcmd_stm32mp=echo "Boot over ${boot_device}${boot_instance}!";if test ${boot_device} = serial || test ${boot_device} = usb;then stm32prog ${boot_device} ${boot_instance}; else run env_check;if test ${boot_device} = mmc;then env set boot_targets "mmc${boot_instance}"; fi;if test ${boot_device} = nand || test ${boot_device} = spi-nand ;then env set boot_targets ubifs0; fi;if test ${boot_device} = nor;then env set boot_targets mmc0; fi;run distro_bootcmd;fi;
bootcmd_ubifs0=devnum=0; run ubifs_boot
bootcmd_usb0=devnum=0; run usb_boot
bootdelay=1
console=ttySTM0
cpu=armv7
distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
efi_dtb_prefixes=/ /dtb/ /dtb/current/
env_check=if env info -p -d -q; then env save; fi
fdt_addr_r=0xc4000000
fdtcontroladdr=da9f3c50
fdtfile=stm32mp135d-atk.dtb
fdtoverlay_addr_r=0xc4300000
kernel_addr_r=0xc2000000
lcd_bmp=alientek_800x480.bmp
lcd_id=1
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0xc2000000
mmc_boot=if mmc dev ${devnum}; then devtype=mmc; run scan_dev_for_boot_part; fi
pxefile_addr_r=0xc4200000
ramdisk_addr_r=0xc4400000
scan_dev_for_boot=run select_lcd_id;echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done; setenv devplist
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;run boot_efi_bootmgr;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${boot_syslinux_conf}; then echo Found ${prefix}${boot_syslinux_conf}; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0xc4100000
select_lcd_id=ext4load mmc ${devnum}:${distro_bootpart} c4300000 ${lcd_bmp};bmp display c4300000;
serial#=004200353232510438323637
serverip=192.168.1.1
soc=stm32mp
ubifs_boot=env exists bootubipart || env set bootubipart UBI; env exists bootubivol || env set bootubivol boot; if ubi part ${bootubipart} && ubifsmount ubi${devnum}:${bootubivol}; then devtype=ubi; run scan_dev_for_boot; fi
usb_boot=usb start; if usb dev ${devnum}; then devtype=usb; run scan_dev_for_boot_part; fi
usb_pgood_delay=1000
vendor=st

bootcmd=
    run bootcmd_stm32mp

bootcmd_stm32mp=
    echo "Boot over ${boot_device}${boot_instance}!";
    if test ${boot_device} = serial || test ${boot_device} = usb;
        then stm32prog ${boot_device} ${boot_instance}; 
    else 
        run env_check;
        
        if test ${boot_device} = mmc;
        then 
            env set boot_targets "mmc${boot_instance}"; 
        fi;
    
        if test ${boot_device} = nand || test ${boot_device} = spi-nand ;
        then 
            env set boot_targets ubifs0; 
        fi;
    
        if test ${boot_device} = nor;
        then 
            env set boot_targets mmc0; 
        fi;
        run distro_bootcmd;
    fi;

distro_bootcmd=
    for target in ${boot_targets}; 
    do 
        run bootcmd_${target}; 
    done

bootcmd_mmc0=
    devnum=0; 
    run mmc_boot

mmc_boot=
    if mmc dev ${devnum}; 
    then 
        devtype=mmc; 
        run scan_dev_for_boot_part; 
    fi

scan_dev_for_boot_part=
    part list ${devtype} ${devnum} -bootable devplist; 
    env exists devplist || setenv devplist 1; 
    for distro_bootpart in ${devplist}; 
    do 
        if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; 
        then 
            run scan_dev_for_boot; 
        fi; 
    done; 
    setenv devplist

boot_prefixes=/ /boot/

scan_dev_for_boot=
    run select_lcd_id;
    echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; 
    for prefix in ${boot_prefixes}; 
    do 
        run scan_dev_for_extlinux; 
        run scan_dev_for_scripts; 
    done;
    
    run scan_dev_for_efi;

scan_dev_for_extlinux=
    if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${boot_syslinux_conf}; 
    then 
        echo Found ${prefix}${boot_syslinux_conf}; 
        run boot_extlinux; 
        echo SCRIPT FAILED: continuing...; 
    fi

boot_extlinux=
    sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}${boot_syslinux_conf}
    
    sysboot mmc 1:4 any 0xc4100000 extlinux/extlinux.conf